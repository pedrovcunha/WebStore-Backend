// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebStore.Persistence.DbContext;

namespace WebStore.Persistence.Migrations
{
    [DbContext(typeof(StoreDbContext))]
    [Migration("20191202153527_SetBasketIdNullableFkInProduct")]
    partial class SetBasketIdNullableFkInProduct
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebStore.Domain.Entities.Basket", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Buyer")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2(0)")
                        .HasDefaultValueSql("(sysutcdatetime())");

                    b.Property<string>("OnlineStoreDomainRegion")
                        .HasColumnType("nvarchar(55)")
                        .HasMaxLength(55);

                    b.HasKey("Id");

                    b.ToTable("Baskets");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d28888e9-2ba9-473a-a40f-e38cb54f9b35"),
                            Buyer = "Pedro",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OnlineStoreDomainRegion = "Australia"
                        },
                        new
                        {
                            Id = new Guid("da2fd609-d754-4feb-8acd-c4f9ff13ba96"),
                            Buyer = "David",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OnlineStoreDomainRegion = "Europe"
                        },
                        new
                        {
                            Id = new Guid("2902b665-1190-4c70-9915-b9c2d7680450"),
                            Buyer = "Stuart",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OnlineStoreDomainRegion = "US"
                        },
                        new
                        {
                            Id = new Guid("102b566b-ba1f-404c-b2df-e2cde39ade09"),
                            Buyer = "Frances",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OnlineStoreDomainRegion = "Europe"
                        },
                        new
                        {
                            Id = new Guid("5b3621c0-7b12-4e80-9c8b-3398cba7ee05"),
                            Buyer = "Lin",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OnlineStoreDomainRegion = "Us"
                        },
                        new
                        {
                            Id = new Guid("2aadd2df-7caf-45ab-9355-7f6332985a87"),
                            Buyer = "Meghan",
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            OnlineStoreDomainRegion = "Europe"
                        });
                });

            modelBuilder.Entity("WebStore.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BasketId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("Id");

                    b.HasIndex("BasketId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("89f811c6-e431-479f-829a-58848a5b5c61"),
                            BasketId = new Guid("d28888e9-2ba9-473a-a40f-e38cb54f9b35"),
                            Category = "Liquor",
                            Description = "Cabernet Sauvignon",
                            Name = "RedWine A",
                            UnitPrice = 35.22m
                        },
                        new
                        {
                            Id = new Guid("0bf3112b-9aad-4eed-a867-6f866fbb1900"),
                            BasketId = new Guid("d28888e9-2ba9-473a-a40f-e38cb54f9b35"),
                            Category = "Liquor",
                            Description = "Shiraz",
                            Name = "Red Wine B",
                            UnitPrice = 22.0m
                        },
                        new
                        {
                            Id = new Guid("289fa3ae-49de-4e5c-ae2b-56205f877965"),
                            BasketId = new Guid("d28888e9-2ba9-473a-a40f-e38cb54f9b35"),
                            Category = "Liquor",
                            Description = "Cabernet Sauvignon",
                            Name = "Red Wine C",
                            UnitPrice = 15.3m
                        },
                        new
                        {
                            Id = new Guid("11b6e96d-5fd5-4bbb-9b9b-40ab0057c820"),
                            BasketId = new Guid("da2fd609-d754-4feb-8acd-c4f9ff13ba96"),
                            Category = "Liquor",
                            Description = "Pinot Noir",
                            Name = "Red Wine D",
                            UnitPrice = 45.5m
                        },
                        new
                        {
                            Id = new Guid("5f6a20b9-b371-434b-99df-3a90907afeb1"),
                            BasketId = new Guid("da2fd609-d754-4feb-8acd-c4f9ff13ba96"),
                            Category = "Liquor",
                            Description = "Pinot Noir",
                            Name = "Red Wine E",
                            UnitPrice = 33.1m
                        });
                });

            modelBuilder.Entity("WebStore.Domain.Entities.Product", b =>
                {
                    b.HasOne("WebStore.Domain.Entities.Basket", "Basket")
                        .WithMany("Products")
                        .HasForeignKey("BasketId");
                });
#pragma warning restore 612, 618
        }
    }
}
